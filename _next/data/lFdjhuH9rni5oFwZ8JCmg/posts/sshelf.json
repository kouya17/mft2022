{"pageProps":{"postData":{"fileData":{"id":"sshelf","matter":{},"contentHtml":"<h1>外観</h1>\n<h1>機能概要</h1>\n<ul>\n<li>どの部品をどこの引き出しに入れたかブラウザから手作業で登録できる。</li>\n<li>部品の在庫をブラウザから検索できる。</li>\n<li>ブラウザから部品詳細ページを開くと、その部品が入っている引き出しのLEDが点滅する。</li>\n<li>引き出しユニットを16個まで追加できる。</li>\n</ul>\n<h1>機能の詳細</h1>\n<h2>引き出し登録</h2>\n<p>引き出し登録時は、以下をブラウザから入力する。</p>\n<ul>\n<li>引き出し名</li>\n<li>ポート番号(接続するPCA9685のポート番号)</li>\n</ul>\n<h2>部品登録</h2>\n<p>部品登録時は、以下をブラウザから入力する。</p>\n<p>なお、秋月電子の購入履歴をコピペすると、上記項目を自動で埋めてくれる機能もある。</p>\n<h2>部品検索</h2>\n<p>部品検索時は、検索したいワードをブラウザから入力する。</p>\n<p>検索結果は5件ずつのリストで表示される。</p>\n<p>検索結果から部品詳細ページに飛ぶことができる。部品詳細ページを開くと、その部品が収まっている引き出しのLEDが点滅する。</p>\n<h1>技術部分の詳細</h1>\n<h2>必要部品</h2>\n<ul>\n<li>ATOM Lite x1: <a href=\"https://www.switch-science.com/catalog/6262/\">https://www.switch-science.com/catalog/6262/</a></li>\n<li>PCA9685サーボシールド x1: <a href=\"https://akizukidenshi.com/catalog/g/gK-10350/\">https://akizukidenshi.com/catalog/g/gK-10350/</a></li>\n<li>マイクロSDカードスロットDIP化キット x1: <a href=\"https://akizukidenshi.com/catalog/g/gK-05488/\">https://akizukidenshi.com/catalog/g/gK-05488/</a></li>\n<li>ユニバーサル基板: <a href=\"https://akizukidenshi.com/catalog/g/gP-12171/\">https://akizukidenshi.com/catalog/g/gP-12171/</a></li>\n<li>3Dプリント部品</li>\n</ul>\n<h2>引き出しの構造</h2>\n<p>道具を用いずに凹凸ではめ込めるようにした。はめ込みの精度は使用する3Dプリンターに依存するので、プリンターに応じて調整を行う必要がある。</p>\n<p>フィラメント量を節約するため、全体的にスリムにしている。強度は度外視している。</p>\n<h2>配線図</h2>\n<h2>電源</h2>\n<p>ATOM LiteのUSB Type-C端子から供給する。</p>\n<h2>LED制御</h2>\n<p><a href=\"https://akizukidenshi.com/catalog/g/gK-10350/\">PCA9685サーボシールド</a>を用いている。現状LEDは消灯or点滅のパターンしかないが、PCA9685のおかげでPWM出力ができるので、ON/OFFだけでなく明るさの調整もやろうと思えばできる。</p>\n<p>今のところ同時にたくさんLEDをつける予定はないため、ATOM Liteの5Vピンから電源を供給している。</p>\n<h2>DB</h2>\n<p><a href=\"https://github.com/siara-cc/esp32_arduino_sqlite3_lib\">Sqlite3 Arduino library for ESP32</a>を用いている。</p>\n<p>データベースファイルはmicroSDカードに保存するようにしている。</p>\n<h3>E-R図</h3>\n<h3>Webサーバー</h3>\n<p><a href=\"https://github.com/me-no-dev/ESPAsyncWebServer\">ESPAsyncWebServer</a>を用いている。</p>\n<h1>作った理由</h1>\n<p>作った理由は、部品の在庫管理を行いたいと思ったため。今どれくらい部品が手持ちにあるか確認せずに、とりあえず必要な部品を(念のため)少し多めに購入する。ということを毎回繰り返していくと、余りの部品がどんどん生成されていく。これは健全ではないのではないかと思い、うまく管理したいなあと思った。</p>\n<p>また、なんとなくのイメージとして、Googleみたいに検索エンジンから部品を検索して、見つかったらその場所が光るみたいなものを作りたかった。今の自分の技術力で実現できそうなところを考えたところ、今回のような形になった。</p>\n<h1>しばらく自分で使ってみての感想</h1>\n<p>ひとまず手持ちの部品を登録してみて、実際に自分で使ってみた感想は以下。</p>\n<ul>\n<li>部品の登録・更新作業がひたすらにめんどくさい。\n<ul>\n<li>部品を入れる時、出す時にいちいちブラウザを開いて作業するのはやってられない。</li>\n<li>せめてバーコード読み取りとかで登録・更新作業ができるようにしないとやってけない。</li>\n</ul>\n</li>\n<li>ブラウザを開いて検索する前にとりあえず引き出しの中を見て確認してしまう。\n<ul>\n<li>どこに何があるかぼんやりと頭の中にあるので、それを頼りにとりあえず検索する前に引き出しの中を見てしまう。</li>\n</ul>\n</li>\n<li>結局自分の頭の中にDBを作るのが一番強いと思う。\n<ul>\n<li>まあ無理なんですけど。</li>\n</ul>\n</li>\n</ul>"},"view":0}},"__N_SSG":true}